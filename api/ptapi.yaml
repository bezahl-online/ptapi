openapi: '3.0.1'
info:
  version: '0.1.0'
  title: PTAPI
  description: Payment Device API

servers:
  - url: http://localhost:8060


paths:
  /test:
    get:
      description: Returns OK
      responses:
        '200':
          $ref: '#/components/responses/statusresponse'
          
  /authorise:
    post:
      operationId: authorise
      requestBody:
        description: >-
          initiate payment; api is stateful and will manage 
          and store intemediate messages from PT and log it 
          to a database
        content:
          application/json:
            schema:
              type: object
              properties:
                receipt_code:
                  type: string
                  example: "00012021012713032101"
                amount:
                  description: amount in cent
                  type: integer
                  format: int64
                  example: 2790
              required:
                - amount
      responses:
        '200':
          $ref: '#/components/responses/statusresponse'
        '400':
          $ref: '#/components/responses/statusresponse'
          
  # /poll_intermediate:
  #    post:
  #     operationId: Intermediate
  #     requestBody:
  #       description: >-
  #         initiate payment; api is stateful and will manage 
  #         and store intemediate messages from PT and log it 
  #         to a database
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               receipt_code:
  #                 type: string
  #                 example: "00012021012713032101"
  #     responses:
  #       '200':
  #         description: response of successful authorisation
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/authorise_response'
  #       '400':
  #         $ref: '#/components/responses/statusresponse'
        
  /authorise_completion:
     post:
      operationId: AuthoriseCompletion
      requestBody:
        description: >-
          initiate payment; api is stateful and will manage 
          and store intemediate messages from PT and log it 
          to a database
        content:
          application/json:
            schema:
              type: object
              properties:
                receipt_code:
                  type: string
                  example: "00012021012713032101"
              required:
                - receipt_code
      responses:
        '200':
          description: response of successful authorisation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/completion_response'
        '400':
          $ref: '#/components/responses/statusresponse'
        
                                
components:

      
  responses:
    statusresponse:
      description: status message with status code and message 
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/status'
            
          
  schemas:
    status:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Status code
        message:
          type: string
          description: Status message

    card:
      type: object
      properties:
        sequence_nr:
          type: integer
          format: int32
          example: 1
        type:
          type: integer
          format: int32
          example: 0
        name:
          type: string
          example: 0
        pan_ef_id:
          type: string
          example: '**** *** **** 5726'
      required:
        - name
        - type
        - pan_ef_id
        - sequence_nr

    authorise_response:
      type: object
      properties:
        error:
          type: string
          example: "timeout"
        result:
          $ref: '#/components/schemas/authorise_result'
        data:
          $ref: '#/components/schemas/authorise_response_data'

      required:
        - error
        - result
    
    authorise_result:
      type: string
      enum:
        - 'pending'
        - 'success'
        - 'timeout'
        - 'abort'

    authorise_response_data:
      type: object
      properties:
        amount:
          type: integer
          format: int64
          example: 2790
        timestamp:
          type: string
          example: '20210310 094833'
        terminal_id:
          type: string
          example: '29001006'
        vu_nr:
          type: string
          example: '100764992'
        receipt_nr:
          type: integer
          format: int64
          example: '0022'
        turnover_nr:
          type: integer
          format: int64
          example: '0022'
        card_tech:
          type: integer
          format: int32
          example: 2
        aid:
          type: string
          example: 'A0000000041010'
        crypto:
          type: string
          example: 'CC0D7CBD9E02A2A'
        card:
          $ref: '#/components/schemas/card'
      required:
        - receipt_nr
        - turnover_nr
        - crypto
        - card
        - vu_nr
        - terminal_id
        - amount
        - timestamp

    completion_response:
      type: object
      properties:
        status:
          type: integer
          format: int32
          example: 1
        message:
          type: string
          example: 'please wait'
        transaction:
          $ref: '#/components/schemas/authorise_response'
      required:
        - status
        - message
