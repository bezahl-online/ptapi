openapi: '3.0.1'
info:
  version: '0.1.0'
  title: PTAPI
  description: Payment Device API

servers:
  - url: http://localhost:8060


paths:
  /test:
    get:
      description: Returns OK
      responses:
        '200':
          $ref: '#/components/responses/statusresponse'


  /authorise:
    post:
      operationId: authorise
      requestBody:
        description: >-
          initiate payment authorisation; api will log intemediate messages from PT;
          after initiation the authorisation_competion must be polled until the
          return result indicates either success or abortion of the process
        content:
          application/json:
            schema:
              type: object
              properties:
                receipt_code:
                  type: string
                  example: "00012021012713032101"
                amount:
                  description: amount in cent
                  type: integer
                  format: int64
                  example: 2790
              required:
                - amount
                - receipt_code
      responses:
        '200':
          $ref: '#/components/responses/statusresponse'
        '400':
          $ref: '#/components/responses/statusresponse'

  /authorise_completion:
     post:
      operationId: AuthoriseCompletion
      requestBody:
        description: >-
          use to poll PT until completion of the finished
        content:
          application/json:
            schema:
              type: object
              properties:
                receipt_code:
                  type: string
                  example: "00012021012713032101"
              required:
                - receipt_code
      responses:
        '200':
          description: response of successful initiation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_completion_response'
        '400':
          $ref: '#/components/responses/statusresponse'


  /display_text:
    post:
      operationId: DisplayText
      requestBody:
        description: >-
          display text on the display of the idle PT
        content:
          application/json:
            schema:
              type: object
              properties:
                lines:
                  type: array
                  items:
                    type: string
                  example:
                    - "Textline 1"
                    - "Textline 2"
                    - "Textline 3"
                    - "Textline 4"
      responses:
        '200':
          $ref: '#/components/responses/statusresponse'
        '400':
          $ref: '#/components/responses/statusresponse'


  /register:
    post:
      operationId: register
      requestBody:
        description: >-
          register the PT to set all configuration parameters
          to be added when needed
        content:
          application/json:
            schema:
              type: object
              properties:
                option:
                  type: string
                  example: "maybe later"

      responses:
        '200':
          $ref: '#/components/responses/statusresponse'
        '400':
          $ref: '#/components/responses/statusresponse'

  /register_completion:
     post:
      operationId: RegisterCompletion

      responses:
        '200':
          description: response of successful initiation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/register_completion_response'
        '400':
          $ref: '#/components/responses/statusresponse'

  /status:
    post:
      operationId: status
      requestBody:
        description: >-
          send status enquiry to PT 
        content:
          application/json:
            schema:
              type: object
              properties:
                option:
                  type: string
                  example: "maybe later"

      responses:
        '200':
          $ref: '#/components/responses/statusresponse'
        '400':
          $ref: '#/components/responses/statusresponse'

  /status_completion:
     post:
      operationId: statusCompletion

      responses:
        '200':
          description: response of successful initiation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status_completion_response'
        '400':
          $ref: '#/components/responses/statusresponse'


  /abort:
    post:
      operationId: abort
      # requestBody:
      #   description: >-
      #     aborts running authorisation process
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           receipt_code:
      #             type: string
      #             example: "00012021012713032101"

      responses:
        '200':
          $ref: '#/components/responses/statusresponse'
        '400':
          $ref: '#/components/responses/statusresponse'


  /endofday:
    post:
      operationId: EndOfDay
      description: >-
        initiate end of day; api will log intemediate messages from PT;
        after initiation the endofday_competion must be polled until the
        return result indicates either success or abortion of the process
      responses:
        '200':
          $ref: '#/components/responses/statusresponse'
        '400':
          $ref: '#/components/responses/statusresponse'

  /endofday_completion:
    post:
      operationId: EndOfDayCompletion
      description: >-
        use to poll PT until completion of the finished
      responses:
        '200':
          description: response of successful initiation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/end_of_day_completion_response'
        '400':
          $ref: '#/components/responses/statusresponse'

components:

  responses:
    statusresponse:
      description: status message with status code and message
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/status'


  schemas:
    status:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Status code
        message:
          type: string
          description: Status message

    card:
      type: object
      properties:
        sequence_nr:
          type: integer
          format: int32
          example: 1
        type:
          type: integer
          format: int32
          example: 48
        name:
          type: string
          example: 'Mastercard'
        expiry:
          description: 'YYMM'
          type: string
          example: '2203'
        pan_ef_id:
          type: string
          example: '**** *** **** 5726'
      required:
        - name
        - type
        - pan_ef_id
        - sequence_nr
        - expiry

    authorise_response:
      type: object
      properties:
        error:
          type: string
          example: "timeout"
        result:
          $ref: '#/components/schemas/pt_result'
        data:
          $ref: '#/components/schemas/authorise_response_data'
      required:
        - error
        - result

    pt_result:
      type: string
      enum:
        - 'pending'
        - 'success'
        - 'timeout'
        - 'need_end_of_day'
        - 'abort'

    authorise_response_data:
      type: object
      properties:
        amount:
          type: integer
          format: int64
          example: 2790
        currency:
          type: integer
          format: int32
          example: 123
        timestamp:
          type: string
          example: '20210310 094833'
        terminal_id:
          type: string
          example: '29001006'
        vu_nr:
          type: string
          example: '100764992'
        receipt_nr:
          type: integer
          format: int64
          example: '0022'
        turnover_nr:
          type: integer
          format: int64
          example: '0022'
        card_tech:
          type: integer
          format: int32
          example: 2
        aid:
          type: string
          example: 'A0000000041010'
        emv_customer:
          type: string
        emv_merchant:
          type: string
        info:
          type: string
          example: 'Karte abgelehnt'
        crypto:
          description: >-
            EMV-print-data (merchant-receipt)
          type: string
          example: 'CC0D7CBD9E02A2A'
        card:
          $ref: '#/components/schemas/card'
      required:
        - receipt_nr
        - turnover_nr
        - crypto
        - card
        - vu_nr
        - terminal_id
        - amount
        - timestamp
        - currency
        - info
        - aid
        - emv_customer
        - emv_merchant
        - card_tech
        
    auth_completion_response:
      type: object
      properties:
        status:
          type: integer
          format: int32
          example: 1
        message:
          type: string
          example: 'please wait'
        transaction:
          $ref: '#/components/schemas/authorise_response'
      required:
        - status
        - message

    end_of_day_completion_response:
      type: object
      properties:
        status:
          type: integer
          format: int32
          example: 1
        message:
          type: string
          example: 'please wait'
        transaction:
          $ref: '#/components/schemas/end_of_day_response'
      required:
        - status
        - message

    end_of_day_response:
      type: object
      properties:
        error:
          type: string
          example: "timeout"
        result:
          $ref: '#/components/schemas/pt_result'
        data:
          $ref: '#/components/schemas/end_of_day_response_data'
      required:
        - error
        - result

    end_of_day_response_data:
      type: object
      properties:
        timestamp:
          $ref: '#/components/schemas/timestamp'
        total:
          type: integer
          format: int64
          example: 12340
        single_totals:
          $ref: '#/components/schemas/single_totals'
      required:
        - tracenr
        - timestamp
        - utc_time
        - total
        - single_totals

    single_totals:
      type: object
      properties:
        ReceiptNrStart:
          type: integer
          format: int64
          example: 68
        ReceiptNrEnd:
          type: integer
          format: int64
          example: 71
        CountEC:
          type: integer
          format: int64
          example: 4
        TotalEC:
          type: integer
          format: int64
          example: 2600
        CountJCB:
          type: integer
          format: int64
          example: 0
        TotalJCB:
          type: integer
          format: int64
          example: 0
        CountEurocard:
          type: integer
          format: int64
          example: 0
        TotalEurocard:
          type: integer
          format: int64
          example: 0
        CountAmex:
          type: integer
          format: int64
          example: 0
        TotalAmex:
          type: integer
          format: int64
          example: 0
        CountVisa:
          type: integer
          format: int64
          example: 0
        TotalVisa:
          type: integer
          format: int64
          example: 0
        CountDiners:
          type: integer
          format: int64
          example: 0
        TotalDiners:
          type: integer
          format: int64
          example: 0
        CountOther:
          type: integer
          format: int64
          example: 0
        TotalOther:
          type: integer
          format: int64
          example: 0

    register_response:
      type: object
      properties:
        error:
          type: string
          example: "timeout"
        result:
          $ref: '#/components/schemas/pt_result'
      #  data:
      #    $ref: '#/components/schemas/register_response_data'
      required:
        - error
        - result

    register_completion_response:
      type: object
      properties:
        status:
          type: integer
          format: int32
          example: 1
        message:
          type: string
          example: 'please wait'
        transaction:
          $ref: '#/components/schemas/register_response'
      required:
        - status
        - message
    
    status_enquiry_response:
      type: object
      properties:
        error:
          type: string
          example: "timeout"
        result:
          $ref: '#/components/schemas/pt_result'
      required:
        - error
        - result

    status_completion_response:
      type: object
      properties:
        status:
          type: integer
          format: int32
          example: 1
        message:
          type: string
          example: 'please wait'
        transaction:
          $ref: '#/components/schemas/status_enquiry_response'
      required:
        - status
        - message

    timestamp:
      description: seconds since Jan 01 1970. (UTC)
      type: integer
      format: int64
      example: 1608358936
