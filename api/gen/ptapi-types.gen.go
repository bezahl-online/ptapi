// Package gen provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package gen

// AuthCompletionResponse defines model for auth_completion_response.
type AuthCompletionResponse struct {
	Message     string             `json:"message"`
	Status      int32              `json:"status"`
	Transaction *AuthoriseResponse `json:"transaction,omitempty"`
}

// AuthoriseResponse defines model for authorise_response.
type AuthoriseResponse struct {
	Data   *AuthoriseResponseData `json:"data,omitempty"`
	Error  string                 `json:"error"`
	Result PtResult               `json:"result"`
}

// AuthoriseResponseData defines model for authorise_response_data.
type AuthoriseResponseData struct {
	Aid      string `json:"aid"`
	Amount   int64  `json:"amount"`
	Card     Card   `json:"card"`
	CardTech int32  `json:"card_tech"`

	// EMV-print-data (merchant-receipt)
	Crypto      string `json:"crypto"`
	Currency    int32  `json:"currency"`
	EmvCustomer string `json:"emv_customer"`
	EmvMerchant string `json:"emv_merchant"`
	Info        string `json:"info"`
	ReceiptNr   int64  `json:"receipt_nr"`
	TerminalId  string `json:"terminal_id"`
	Timestamp   string `json:"timestamp"`
	TurnoverNr  int64  `json:"turnover_nr"`
	VuNr        string `json:"vu_nr"`
}

// Card defines model for card.
type Card struct {

	// YYMM
	Expiry     string `json:"expiry"`
	Name       string `json:"name"`
	PanEfId    string `json:"pan_ef_id"`
	SequenceNr int32  `json:"sequence_nr"`
	Type       int32  `json:"type"`
}

// EndOfDayCompletionResponse defines model for end_of_day_completion_response.
type EndOfDayCompletionResponse struct {
	Message     string            `json:"message"`
	Status      int32             `json:"status"`
	Transaction *EndOfDayResponse `json:"transaction,omitempty"`
}

// EndOfDayResponse defines model for end_of_day_response.
type EndOfDayResponse struct {
	Data   *EndOfDayResponseData `json:"data,omitempty"`
	Error  string                `json:"error"`
	Result PtResult              `json:"result"`
}

// EndOfDayResponseData defines model for end_of_day_response_data.
type EndOfDayResponseData struct {
	RegisterId   int32        `json:"register_id"`
	SingleTotals SingleTotals `json:"single_totals"`

	// seconds since Jan 01 1970. (UTC)
	Timestamp Timestamp `json:"timestamp"`
	Total     int64     `json:"total"`
}

// PtResult defines model for pt_result.
type PtResult string

// List of PtResult
const (
	PtResult_abort           PtResult = "abort"
	PtResult_need_end_of_day PtResult = "need_end_of_day"
	PtResult_pending         PtResult = "pending"
	PtResult_success         PtResult = "success"
	PtResult_timeout         PtResult = "timeout"
)

// RegisterCompletionResponse defines model for register_completion_response.
type RegisterCompletionResponse struct {
	Message     string            `json:"message"`
	Status      int32             `json:"status"`
	Transaction *RegisterResponse `json:"transaction,omitempty"`
}

// RegisterResponse defines model for register_response.
type RegisterResponse struct {
	Error  string   `json:"error"`
	Result PtResult `json:"result"`
}

// SingleTotals defines model for single_totals.
type SingleTotals struct {
	CountAmex      *int64 `json:"CountAmex,omitempty"`
	CountDiners    *int64 `json:"CountDiners,omitempty"`
	CountEC        *int64 `json:"CountEC,omitempty"`
	CountEurocard  *int64 `json:"CountEurocard,omitempty"`
	CountJCB       *int64 `json:"CountJCB,omitempty"`
	CountOther     *int64 `json:"CountOther,omitempty"`
	CountVisa      *int64 `json:"CountVisa,omitempty"`
	ReceiptNrEnd   *int64 `json:"ReceiptNrEnd,omitempty"`
	ReceiptNrStart *int64 `json:"ReceiptNrStart,omitempty"`
	TotalAmex      *int64 `json:"TotalAmex,omitempty"`
	TotalDiners    *int64 `json:"TotalDiners,omitempty"`
	TotalEC        *int64 `json:"TotalEC,omitempty"`
	TotalEurocard  *int64 `json:"TotalEurocard,omitempty"`
	TotalJCB       *int64 `json:"TotalJCB,omitempty"`
	TotalOther     *int64 `json:"TotalOther,omitempty"`
	TotalVisa      *int64 `json:"TotalVisa,omitempty"`
}

// Status defines model for status.
type Status struct {

	// Status code
	Code int32 `json:"code"`

	// Status message
	Message string `json:"message"`
}

// StatusCompletionResponse defines model for status_completion_response.
type StatusCompletionResponse struct {
	Message     string                 `json:"message"`
	Status      int32                  `json:"status"`
	Transaction *StatusEnquiryResponse `json:"transaction,omitempty"`
}

// StatusEnquiryResponse defines model for status_enquiry_response.
type StatusEnquiryResponse struct {
	Error  string   `json:"error"`
	Result PtResult `json:"result"`
}

// Timestamp defines model for timestamp.
type Timestamp int64

// Statusresponse defines model for statusresponse.
type Statusresponse Status

// AuthoriseJSONBody defines parameters for Authorise.
type AuthoriseJSONBody struct {

	// amount in cent
	Amount      int64  `json:"amount"`
	ReceiptCode string `json:"receipt_code"`
}

// AuthoriseCompletionJSONBody defines parameters for AuthoriseCompletion.
type AuthoriseCompletionJSONBody struct {
	ReceiptCode string `json:"receipt_code"`
}

// DisplayTextJSONBody defines parameters for DisplayText.
type DisplayTextJSONBody struct {
	Lines *[]string `json:"lines,omitempty"`
}

// RegisterJSONBody defines parameters for Register.
type RegisterJSONBody struct {
	Option *string `json:"option,omitempty"`
}

// StatusJSONBody defines parameters for Status.
type StatusJSONBody struct {
	Option *string `json:"option,omitempty"`
}

// AuthoriseJSONRequestBody defines body for Authorise for application/json ContentType.
type AuthoriseJSONRequestBody AuthoriseJSONBody

// AuthoriseCompletionJSONRequestBody defines body for AuthoriseCompletion for application/json ContentType.
type AuthoriseCompletionJSONRequestBody AuthoriseCompletionJSONBody

// DisplayTextJSONRequestBody defines body for DisplayText for application/json ContentType.
type DisplayTextJSONRequestBody DisplayTextJSONBody

// RegisterJSONRequestBody defines body for Register for application/json ContentType.
type RegisterJSONRequestBody RegisterJSONBody

// StatusJSONRequestBody defines body for Status for application/json ContentType.
type StatusJSONRequestBody StatusJSONBody
